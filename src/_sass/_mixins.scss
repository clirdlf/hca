@use 'sass:map';

@import 'variables';

@mixin headings {
    h1, h2, h3, h4, h5, h6 {
        @content;
    }
}

@each $name, $color in $colors {
    .bg-#{"" + $name} {
        background-color: $color;
    }

    .text-bg-#{"" + $name} {
        color: white;
        background-color: $color;
    }

    .text-bg-#{"" + $name}-light {
        background-color: cv($color, 'light');
    }

    .border-#{"" + $name} {
        border-color: $color;
    }
}

// $variations: (
//     light: (
//         function: lighten, parameters: 25%
//     ),
//     dark: (
//         function: darken, parameters: 10%
//     ),
//     fade: (
//         function: rgba, parameters: .7
//     ),
//     gray: (
//         function: grayscale
//     ),
//     shade: (
//         function: mix, parameters: white 80%
//     )
// );



// https://www.sitepoint.com/managing-color-values-with-sass/
// @function color-variation($color, $variation: false) {

//     // Correctly set $color variable:
//     @if map-has-key($colors, $color) {
//       // $color is in $colors, set variable = map-value
//         $color: map-get($colors, $color); 
//     } @else {
//         @if type-of($color) != color {
//         // $color is not in $color and $color is not a color
//         @error "Invalid color name: `#{$color}`."; 
//         }
//       // $color is a valid color - use it
//     }

//     @if $variation {
//         @if not map-has-key($variations, $variation) {
//             // variation is not in $variations
//             @error "Invalid $variation: `#{$variation}`.";
//         } @else {
//             // make it easier to deal with nested map
//             $this-variation: map-get($variations, $variation);
//             // $args = $function, $color
//             $args: join(map-get($this-variation, function), $color);
//             @if map-get($this-variation, parameters) {
//             // $args = $function, $colors, $parameters
//             $args: join($args, map-get($this-variation, parameters));
//             }
//             //@return $args;
//             // @return call($args...);
//             @return call($args...);
//         }
//     }
//     // no $variation, just return $color
//     @return $color;
// }

// @function cv($color, $variation: false) {
//     @return color-variation($color, $variation);
// }

